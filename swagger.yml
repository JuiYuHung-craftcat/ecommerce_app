openapi: "3.1.0"

info:
  title: "ecommerce REST API"
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.0.0

servers:
  - url: "http://localhost:4000"

paths:
  /products:
    get:
      summary: Returns a list of products.
      description: Returns a list of products.
      tags:
        - products_endpoint
      responses:
        "200": # status code
          description: A JSON array of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    price:
                      type: integer
                    description:
                      type: string
  /products/{productId}:
    get:
      summary: Returns a product by ID.
      description: Returns a product by ID.
      tags:
        - products_endpoint
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      responses:
        "200": # status code
          description: A JSON product
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: integer
                  description:
                    type: string
  /auth/register:
    post:
      summary: Register a user.
      description: Register a user.
      tags:
        - authentication_endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
      responses:
        "201": # status code
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  password:
                    type: string
                  updatedTime:
                    type: string
  /auth/login:
    post:
      summary: Login a user.
      description: Login a user.
      tags:
        - authentication_endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
  /users/{userId}:
    get:
      summary: Get a user data by ID.
      description: Get a user data by ID.
      tags:
        - user_endpoint
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user data to get
      responses:
        "200": # status code
          description: A JSON user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  password:
                    type: string
                  updatedTime:
                    type: string
    put:
      summary: Update a user data by ID.
      description: Update a user data by ID.
      tags:
        - user_endpoint
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user data to updatedTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
      responses:
        "200": # status code
          description: A JSON user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  password:
                    type: string
                  updatedTime:
                    type: string
  /carts/mine:
    get:
      summary: Get a cart data by user ID from cookies.
      description: Get a cart data by user ID from cookies.
      tags:
        - carts_endpoint
      responses:
        "200": # status code
          description: A JSON cart data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    type: integer
                  createdTime:
                    type: string
    post:
      summary: Creat a cart data by user ID from cookies.
      description: Create a cart data by user ID from cookies.
      tags:
        - carts_endpoint
      responses:
        "200": # status code
          description: A JSON cart data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    type: integer
                  createdTime:
                    type: string
  /carts/mine/items:
    post:
      summary: Add a item to the user's cart
      description: Add a item to the user's cart
      tags:
        - carts_endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                cartId:
                  type: integer
                quantity:
                  type: integer
      responses:
        "200": # status code
          description: A JSON cart item data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  productId:
                    type: integer
                  cartId:
                    type: integer
                  quantity:
                    type: integer
  /carts/mine/items/{cartItemId}:
    put:
      summary: Update a item in the user's cart
      description: Update a item in the user's cart
      tags:
        - carts_endpoint
      parameters:
        - in: path
          name: cartItemId
          schema:
            type: integer
          required: true
          description: Numeric ID of the cart item data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                cartId:
                  type: integer
                quantity:
                  type: integer
      responses:
        "200": # status code
          description: A JSON cart item data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  productId:
                    type: integer
                  cartId:
                    type: integer
                  quantity:
                    type: integer
    delete:
      summary: Delete a item in the user's cart
      description: Delete a item in the user's cart
      tags:
        - carts_endpoint
      parameters:
        - in: path
          name: cartItemId
          schema:
            type: integer
          required: true
          description: Numeric ID of the cart item data
      responses:
        "200": # status code
          description: A JSON cart item data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  productId:
                    type: integer
                  cartId:
                    type: integer
                  quantity:
                    type: integer
  /carts/mine/checkout:
    post:
      summary: Check out a cart
      description: Check out a cart
      tags:
        - carts_endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cartId:
                  type: integer
      responses:
        "200": # status code
          description: A JSON order data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  total:
                    type: integer
                  status:
                    type: string
                  userId:
                    type: integer
                  updatedTime:
                    type: integer
  /orders:
    get:
      summary: Get the list of orders
      description: Get the list of orders
      tags:
        - orders_endpoint
      responses:
        "200": # status code
          description: A JSON array of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    total:
                      type: integer
                    status:
                      type: string
                    userId:
                      type: integer
                    updatedTime:
                      type: string
  /orders/{orderId}:
    get:
      summary: Get the order by ID
      description: Get the order by ID
      tags:
        - orders_endpoint
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
          required: true
          description: Numeric ID of the order
      responses:
        "200": # status code
          description: A JSON order data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  total:
                    type: integer
                  status:
                    type: string
                  userId:
                    type: integer
                  updatedTime:
                    type: string
